// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: truck.sql

package generated

import (
	"context"
	"time"
)

const addTruck = `-- name: AddTruck :one
INSERT INTO truck (created_at, name)
VALUES ($1, $2)
RETURNING id, created_at, updated_at, deleted_at, name
`

type AddTruckParams struct {
	CreatedAt time.Time
	Name      string
}

func (q *Queries) AddTruck(ctx context.Context, arg AddTruckParams) (Truck, error) {
	row := q.db.QueryRowContext(ctx, addTruck, arg.CreatedAt, arg.Name)
	var i Truck
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
		&i.Name,
	)
	return i, err
}

const getTruck = `-- name: GetTruck :one
SELECT id, created_at, updated_at, deleted_at, name
FROM truck
WHERE id = $1
LIMIT 1
`

func (q *Queries) GetTruck(ctx context.Context, id int64) (Truck, error) {
	row := q.db.QueryRowContext(ctx, getTruck, id)
	var i Truck
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
		&i.Name,
	)
	return i, err
}
