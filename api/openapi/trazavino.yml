openapi: "3.0.0"
info:
  version: 1.0.0
  title: Trazavino
  description: Wine Supply Chain Traceability System based on Blockchain
  contact:
    name: github.com/alejandroik
    url: https://github.com/alejandroik
servers:
  - url: https://{hostname}/v1
    variables:
      hostname:
        default: localhost
security:
  - bearerAuth: []
paths:
  /receptions:
    get:
      operationId: getReceptions
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receptions'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      operationId: registerReception
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReception'
      responses:
        '204':
          description: todo
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /receptions/{receptionUUID}:
    get:
      operationId: getReception
      parameters:
        - in: path
          name: receptionUUID
          schema:
            type: string
            format: uuid
          required: true
          description: todo
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reception'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /macerations:
    get:
      operationId: getMacerations
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Macerations'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      operationId: registerMaceration
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMaceration'
      responses:
        '204':
          description: todo
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /macerations/{macerationUUID}:
    get:
      operationId: getMaceration
      parameters:
        - in: path
          name: macerationUUID
          schema:
            type: string
            format: uuid
          required: true
          description: todo
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Maceration'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /fermentations:
    get:
      operationId: getFermentations
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fermentations'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      operationId: registerFermentation
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFermentation'
      responses:
        '204':
          description: todo
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /fermentations/{fermentationUUID}:
    get:
      operationId: getFermentation
      parameters:
        - in: path
          name: fermentationUUID
          schema:
            type: string
            format: uuid
          required: true
          description: todo
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fermentation'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /ageings:
    get:
      operationId: getAgeings
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ageings'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      operationId: registerAgeing
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAgeing'
      responses:
        '204':
          description: todo
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /ageings/{ageingUUID}:
    get:
      operationId: getAgeing
      parameters:
        - in: path
          name: ageingUUID
          schema:
            type: string
            format: uuid
          required: true
          description: todo
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ageing'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /bottlings:
    get:
      operationId: getBottlings
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bottlings'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      operationId: registerBottling
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBottling'
      responses:
        '204':
          description: todo
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /bottlings/{bottlingUUID}:
    get:
      operationId: getBottling
      parameters:
        - in: path
          name: bottlingUUID
          schema:
            type: string
            format: uuid
          required: true
          description: todo
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bottling'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /status:
    get:
      operationId: status
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Reception:
      type: object
      required: [uuid, startTime, truck, truckUuid, vineyard, vineyardUuid, grapeType, grapeTypeUuid, weight, sugar]
      properties:
        uuid:
          type: string
          format: uuid
        startTime:
          type: string
          format: date-time
        truck:
          type: string
          example: AA-00-33-BF24
        truckUuid:
          type: string
          format: uuid
        vineyard:
          type: string
          example: Los Andes
        vineyardUuid:
          type: string
          format: uuid
        grapeType:
          type: string
          example: Rosada
        grapeTypeUuid:
          type: string
          format: uuid
        weight:
          type: integer
          format: int32
          example: 2500
        sugar:
          type: integer
          format: int32
          example: 5
        endTime:
          type: string
          format: date-time
        hash:
          type: string
          example: "0xfa646594bf2241061314d53e850a466815b3600a"
        transaction:
          type: string
          example: "0xa1db35ca1754495896bc0d3f7c41c3e80230f138cd528a073fbdd846a026576b"

    Receptions:
      type: object
      required: [receptions]
      properties:
        receptions:
          type: array
          items:
            $ref: '#/components/schemas/Reception'

    PostReception:
      type: object
      required: [truckUuid, vineyardUuid, grapeTypeUuid, weight, sugar]
      properties:
        truckUuid:
          type: string
          format: uuid
        vineyardUuid:
          type: string
          format: uuid
        grapeTypeUuid:
          type: string
          format: uuid
        weight:
          type: integer
          format: int32
          example: 2500
        sugar:
          type: integer
          format: int32
          example: 5

    Maceration:
      type: object
      required: [uuid, startTime, reception, receptionUuid, warehouse, warehouseUuid]
      properties:
        uuid:
          type: string
          format: uuid
        startTime:
          type: string
          format: date-time
        reception:
          type: string
          format: date-time
        receptionUuid:
          type: string
          format: uuid
        warehouse:
          type: string
          example: E#245987F
        warehouseUuid:
          type: string
          format: uuid
        endTime:
          type: string
          format: date-time
        previousUuid:
          type: string
          format: uuid
        hash:
          type: string
          example: "0xfa646594bf2241061314d53e850a466815b3600a"
        transaction:
          type: string
          example: "0xa1db35ca1754495896bc0d3f7c41c3e80230f138cd528a073fbdd846a026576b"

    Macerations:
      type: object
      required: [macerations]
      properties:
        receptions:
          type: array
          items:
            $ref: '#/components/schemas/Maceration'

    PostMaceration:
      type: object
      required: [receptionUuid, warehouseUuid]
      properties:
        receptionUuid:
          type: string
          format: uuid
        warehouseUuid:
          type: string
          format: uuid

    Fermentation:
      type: object
      required: [uuid, startTime, warehouse, warehouseUuid, tank, tankUuid]
      properties:
        uuid:
          type: string
          format: uuid
        startTime:
          type: string
          format: date-time
        warehouse:
          type: string
          example: E#245987F
        warehouseUuid:
          type: string
          format: uuid
        tank:
          type: string
          example: E#245987F
        tankUuid:
          type: string
          format: uuid
        endTime:
          type: string
          format: date-time
        previousUuid:
          type: string
          format: uuid
        hash:
          type: string
          example: "0xfa646594bf2241061314d53e850a466815b3600a"
        transaction:
          type: string
          example: "0xa1db35ca1754495896bc0d3f7c41c3e80230f138cd528a073fbdd846a026576b"

    Fermentations:
      type: object
      required: [fermentations]
      properties:
        receptions:
          type: array
          items:
            $ref: '#/components/schemas/Fermentation'

    PostFermentation:
      type: object
      required: [warehouseUuid, tankUuid]
      properties:
        warehouseUuid:
          type: string
          format: uuid
        tankUuid:
          type: string
          format: uuid

    Ageing:
      type: object
      required: [uuid, startTime, tank, tankUuid, cask, caskUuid, humidity]
      properties:
        uuid:
          type: string
          format: uuid
        startTime:
          type: string
          format: date-time
        tank:
          type: string
          example: E#245987F
        tankUuid:
          type: string
          format: uuid
        cask:
          type: string
          example: E#245987F
        caskUuid:
          type: string
          format: uuid
        humidty:
          type: integer
          format: int32
          example: 5
        endTime:
          type: string
          format: date-time
        previousUuid:
          type: string
          format: uuid
        hash:
          type: string
          example: "0xfa646594bf2241061314d53e850a466815b3600a"
        transaction:
          type: string
          example: "0xa1db35ca1754495896bc0d3f7c41c3e80230f138cd528a073fbdd846a026576b"

    Ageings:
      type: object
      required: [ageings]
      properties:
        receptions:
          type: array
          items:
            $ref: '#/components/schemas/Ageing'

    PostAgeing:
      type: object
      required: [tankUuid, caskUuid, humidity]
      properties:
        tankUuid:
          type: string
          format: uuid
        caskUuid:
          type: string
          format: uuid
        humidty:
          type: integer
          format: int32
          example: 5

    Bottling:
      type: object
      required: [uuid, startTime, cask, caskUuid, wine, wineUuid, bottleQty]
      properties:
        uuid:
          type: string
          format: uuid
        startTime:
          type: string
          format: date-time
        cask:
          type: string
          example: E#245987F
        caskUuid:
          type: string
          format: uuid
        wine:
          type: string
          example: E#245987F
        wineUuid:
          type: string
          format: uuid
        bottleQty:
          type: integer
          format: int32
          example: 5
        endTime:
          type: string
          format: date-time
        previousUuid:
          type: string
          format: uuid
        hash:
          type: string
          example: "0xfa646594bf2241061314d53e850a466815b3600a"
        transaction:
          type: string
          example: "0xa1db35ca1754495896bc0d3f7c41c3e80230f138cd528a073fbdd846a026576b"

    Bottlings:
      type: object
      required: [bottlings]
      properties:
        receptions:
          type: array
          items:
            $ref: '#/components/schemas/Bottling'

    PostBottling:
      type: object
      required: [caskUuid, wineUuid, bottleQty]
      properties:
        caskUuid:
          type: string
          format: uuid
        wineUuid:
          type: string
          format: uuid
        bottleQty:
          type: integer
          format: int32
          example: 5

    Error:
      type: object
      required:
        - slug
        - message
      properties:
        slug:
          type: string
        message:
          type: string

    Status:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: ok
